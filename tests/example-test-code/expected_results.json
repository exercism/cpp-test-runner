{"version": 3, "status": "fail", "tests": [{"name": "not_divisible_by_4", "status": "pass", "test_code": "{\n    // some nonsense code to test test cases\n    // with several lines\n\n    int a{3};\n\n    if(a > 2)\n        REQUIRE(!leap::is_leap_year(2015));\n}"}, {"name": "divisible_by_2_not_divisible_by_4", "status": "pass", "test_code": "{\n    REQUIRE(!leap::is_leap_year(1970));\n}"}, {"name": "divisible_by_4_not_divisible_by_100", "status": "pass", "test_code": "{\n    REQUIRE(leap::is_leap_year(1996));\n\n    // A common problem are double quotes, which might break the json file: \"\n    // Hopefully two singles quotes are not a problem: ''\n}"}, {"name": "divisible_by_100_not_divisible_by_400", "status": "pass", "test_code": "{\n    REQUIRE(!leap::is_leap_year(2100));\n\n    // Test to see if things after the Require macro\n    // get erased:\n    int b{66};\n    if (b < 100) b -= 7;\n}"}, {"name": "divisible_by_400", "status": "fail", "message": "\nFAILED:\n  REQUIRE( leap::is_leap_year(2000) )\nwith expansion:\n  false\nat /tmp/example-test-code/example_test_code_test.cpp:45\n", "test_code": "{\n    REQUIRE(!leap::is_leap_year(2100));\n\n    // Test to see if things after the Require macro\n    // get erased:\n    int b{66};\n    if (b < 100) b -= 7;\n}"}, {"name": "divisible_by_200_not_divisible_by_400", "status": "pass", "test_code": "{\n    REQUIRE(!leap::is_leap_year(1800));\n}"}]}